{"ast":null,"code":"import { ApolloClient, InMemoryCache, gql } from '@apollo/client';\nconst serverUrl = 'http://localhost:5000/graphql';\nconst client = new ApolloClient({\n  uri: serverUrl,\n  cache: new InMemoryCache()\n});\nexport const getAllWords = async () => {\n  const result = await client.query({\n    query: gql`\n            {\n                words{\n                    word\n                    entries{\n                        partOfSpeech\n                        origin\n                        definitions\n                        examples\n                    }\n                }\n            }`\n  });\n  return result.data.words;\n};\nexport const addNewWord = async word => {\n  const result = await client.mutate({\n    mutation: gql`\n            mutation {\n\n                addWord(word: \"${word}\"){\n                   \n                    word\n                   \n                    entries{\n                        partOfSpeech\n                        origin\n                        definitions\n                        examples\n                    }\n                }\n            }`\n  });\n  return result.data.addWord;\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/New folder/client/src/components/graph.js"],"names":["ApolloClient","InMemoryCache","gql","serverUrl","client","uri","cache","getAllWords","result","query","data","words","addNewWord","word","mutate","mutation","addWord"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,EAAsCC,GAAtC,QAAiD,gBAAjD;AAEA,MAAMC,SAAS,GAAG,+BAAlB;AAEA,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAE5BK,EAAAA,GAAG,EAAEF,SAFuB;AAI5BG,EAAAA,KAAK,EAAE,IAAIL,aAAJ;AAJqB,CAAjB,CAAf;AAQA,OAAO,MAAMM,WAAW,GAAG,YAAY;AACnC,QAAMC,MAAM,GAAG,MAAMJ,MAAM,CACtBK,KADgB,CACV;AACHA,IAAAA,KAAK,EAAEP,GAAI;;;;;;;;;;;;AADR,GADU,CAArB;AAeA,SAAOM,MAAM,CAACE,IAAP,CAAYC,KAAnB;AACH,CAjBM;AAoBP,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;AAEtC,QAAML,MAAM,GAAG,MAAMJ,MAAM,CACtBU,MADgB,CACT;AACJC,IAAAA,QAAQ,EAAEb,GAAI;;;iCAGOW,IAAK;;;;;;;;;;;;AAJtB,GADS,CAArB;AAkBA,SAAOL,MAAM,CAACE,IAAP,CAAYM,OAAnB;AACH,CArBM","sourcesContent":["import { ApolloClient, InMemoryCache, gql } from '@apollo/client'\r\n\r\nconst serverUrl = 'http://localhost:5000/graphql'\r\n\r\nconst client = new ApolloClient({\r\n\r\n    uri: serverUrl,\r\n\r\n    cache: new InMemoryCache()\r\n})\r\n\r\n\r\nexport const getAllWords = async () => {\r\n    const result = await client\r\n        .query({\r\n            query: gql`\r\n            {\r\n                words{\r\n                    word\r\n                    entries{\r\n                        partOfSpeech\r\n                        origin\r\n                        definitions\r\n                        examples\r\n                    }\r\n                }\r\n            }`\r\n        })\r\n    return result.data.words\r\n}\r\n\r\n\r\nexport const addNewWord = async (word) => {\r\n\r\n    const result = await client\r\n        .mutate({\r\n            mutation: gql`\r\n            mutation {\r\n\r\n                addWord(word: \"${word}\"){\r\n                   \r\n                    word\r\n                   \r\n                    entries{\r\n                        partOfSpeech\r\n                        origin\r\n                        definitions\r\n                        examples\r\n                    }\r\n                }\r\n            }`\r\n        })\r\n    return result.data.addWord\r\n}"]},"metadata":{},"sourceType":"module"}