{"ast":null,"code":"// import { ApolloClient, InMemoryCache, gql } from '@apollo/client'\n// const serverUrl = 'http://localhost:5000/graphql'\n// const client = new ApolloClient({\n//     uri: serverUrl,\n//     cache: new InMemoryCache()\n// })\n// export const getAllWords = async () => {\n//     const result = await client\n//         .query({\n//             query: gql`\n//             {\n//                 words{\n//                     word\n//                     entries{\n//                         partOfSpeech\n//                         origin\n//                         definitions\n//                         examples\n//                     }\n//                 }\n//             }`\n//         })\n//     return result.data.words\n// }\n// export const addNewWord = async (word) => {\n//     const result = await client\n//         .mutate({\n//             mutation: gql`\n//             mutation {\n//                 addWord(word: \"${word}\"){\n//                     word\n//                     entries{\n//                         partOfSpeech\n//                         origin\n//                         definitions\n//                         examples\n//                     }\n//                 }\n//             }`\n//         })\n//     return result.data.addWord\n// }","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/New folder/client/src/utils/helper.js"],"names":[],"mappings":"AAAA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { ApolloClient, InMemoryCache, gql } from '@apollo/client'\r\n\r\n// const serverUrl = 'http://localhost:5000/graphql'\r\n\r\n// const client = new ApolloClient({\r\n//     uri: serverUrl,\r\n//     cache: new InMemoryCache()\r\n// })\r\n\r\n// export const getAllWords = async () => {\r\n//     const result = await client\r\n//         .query({\r\n//             query: gql`\r\n//             {\r\n//                 words{\r\n//                     word\r\n//                     entries{\r\n//                         partOfSpeech\r\n//                         origin\r\n//                         definitions\r\n//                         examples\r\n//                     }\r\n//                 }\r\n//             }`\r\n//         })\r\n//     return result.data.words\r\n// }\r\n\r\n// export const addNewWord = async (word) => {\r\n//     const result = await client\r\n//         .mutate({\r\n//             mutation: gql`\r\n//             mutation {\r\n//                 addWord(word: \"${word}\"){\r\n//                     word\r\n//                     entries{\r\n//                         partOfSpeech\r\n//                         origin\r\n//                         definitions\r\n//                         examples\r\n//                     }\r\n//                 }\r\n//             }`\r\n//         })\r\n//     return result.data.addWord\r\n// }"]},"metadata":{},"sourceType":"module"}