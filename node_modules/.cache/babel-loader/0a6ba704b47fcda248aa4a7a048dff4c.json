{"ast":null,"code":"import { addNewWord, getAllWords } from '../utils/helper';\nexport const RECEIVE_WORDS = 'RECEIVE_WORDS';\nexport const ADD_NEW_WORD = 'ADD_NEW_WORD';\nexport const receiveWords = words => {\n  return {\n    type: RECEIVE_WORDS,\n    words\n  };\n};\nexport const addWord = word => {\n  return {\n    type: ADD_NEW_WORD,\n    word\n  };\n}; // export const handleAddWord = (word) => {\n//     return dispatch => {\n//         return addNewWord(word)\n//             .then(word => dispatch(addWord(word)))\n//     }\n// }\n// export const handleInitialData = () => {\n//     return dispatch => {\n//         return getAllWords()\n//             .then(words => dispatch(receiveWords(words)))\n//     }\n// }","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/New folder/client/src/Redux/action.js"],"names":["addNewWord","getAllWords","RECEIVE_WORDS","ADD_NEW_WORD","receiveWords","words","type","addWord","word"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,iBAAxC;AAEA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AACnC,SAAO;AACHC,IAAAA,IAAI,EAAEJ,aADH;AAEHG,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,OAAO,GAAIC,IAAD,IAAU;AAC7B,SAAO;AACHF,IAAAA,IAAI,EAAEH,YADH;AAEHK,IAAAA;AAFG,GAAP;AAKH,CANM,C,CAQP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { addNewWord, getAllWords } from '../utils/helper'\r\n\r\nexport const RECEIVE_WORDS = 'RECEIVE_WORDS'\r\nexport const ADD_NEW_WORD = 'ADD_NEW_WORD'\r\n\r\nexport const receiveWords = (words) => {\r\n    return {\r\n        type: RECEIVE_WORDS,\r\n        words\r\n    }\r\n}\r\n\r\nexport const addWord = (word) => {\r\n    return {\r\n        type: ADD_NEW_WORD,\r\n        word\r\n\r\n    }\r\n}\r\n\r\n// export const handleAddWord = (word) => {\r\n//     return dispatch => {\r\n//         return addNewWord(word)\r\n//             .then(word => dispatch(addWord(word)))\r\n//     }\r\n// }\r\n\r\n// export const handleInitialData = () => {\r\n//     return dispatch => {\r\n//         return getAllWords()\r\n//             .then(words => dispatch(receiveWords(words)))\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}