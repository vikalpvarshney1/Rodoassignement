{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\GitHub\\\\Roado-Assignment\\\\client\\\\src\\\\components\\\\WordDetail.js\";\nimport React, { Fragment } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }\n  }));\n});\nexport default function WordDetail(props) {\n  const {\n    word\n  } = props;\n  return /*#__PURE__*/React.createElement(Dialog, {\n    fullScreen: true,\n    open: props.open,\n    onClose: props.handleClose,\n    TransitionComponent: Transition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"closeBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    color: \"inherit\",\n    onClick: () => props.handleClose(),\n    \"aria-label\": \"close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '10px 20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, word.word ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, word.word), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }), word.entries.map((entry, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"i\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 33\n    }\n  }, entry.partOfSpeech), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }\n  }, entry.origin.length !== 0 && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 68\n    }\n  }, \"Origin:\"), \" \", entry.origin[0]), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    style: {\n      marginTop: 10\n    },\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }\n  }, entry.definitions[0]), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      paddingLeft: 30,\n      fontSize: '14px',\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, entry.examples.map((example, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 78\n    }\n  }, example))), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  })))) : ''));\n}","map":{"version":3,"sources":["C:/Users/ASUS/Documents/GitHub/Roado-Assignment/client/src/components/WordDetail.js"],"names":["React","Fragment","Dialog","Divider","IconButton","Typography","CloseIcon","Slide","Transition","forwardRef","props","ref","WordDetail","word","open","handleClose","padding","marginTop","entries","map","entry","index","partOfSpeech","origin","length","definitions","paddingLeft","fontSize","examples","example"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,MAAMC,UAAU,GAAGR,KAAK,CAACS,UAAN,CAAiB,SAASD,UAAT,CAAoBE,KAApB,EAA2BC,GAA3B,EAAgC;AAChE,sBAAO,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,IAAjB;AAAsB,IAAA,GAAG,EAAEA;AAA3B,KAAoCD,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CAFkB,CAAnB;AAIA,eAAe,SAASE,UAAT,CAAoBF,KAApB,EAA2B;AACtC,QAAM;AAAEG,IAAAA;AAAF,MAAWH,KAAjB;AACA,sBACI,oBAAC,MAAD;AAAQ,IAAA,UAAU,MAAlB;AAAmB,IAAA,IAAI,EAAEA,KAAK,CAACI,IAA/B;AAAqC,IAAA,OAAO,EAAEJ,KAAK,CAACK,WAApD;AAAiE,IAAA,mBAAmB,EAAEP,UAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,KAAjB;AAAuB,IAAA,KAAK,EAAC,SAA7B;AAAuC,IAAA,OAAO,EAAE,MAAME,KAAK,CAACK,WAAN,EAAtD;AAA2E,kBAAW,OAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,eAMI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,IAAI,CAACA,IAAL,gBACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,IAAI,CAACA,IADV,CADJ,eAII,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEI,MAAAA,SAAS,EAAE;AAAb,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKKJ,IAAI,CAACK,OAAL,CAAaC,GAAb,CAAiB,CAACC,KAAD,EAAQC,KAAR,kBACd;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAiB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,SAAS,EAAE;AAAb,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,eAAlC;AAAkD,IAAA,SAAS,EAAC,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,KAAK,CAACE,YADX,CADJ,eAII,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,eAAlC;AAAkD,IAAA,SAAS,EAAC,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACG,MAAN,CAAaC,MAAb,KAAwB,CAAxB,iBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADnC,OAC2DJ,KAAK,CAACG,MAAN,CAAa,CAAb,CAD3D,CAJJ,eAOI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAgC,IAAA,KAAK,EAAE;AAAEN,MAAAA,SAAS,EAAE;AAAb,KAAvC;AAA0D,IAAA,SAAS,EAAC,GAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,KAAK,CAACK,WAAN,CAAkB,CAAlB,CADL,CAPJ,eAUI;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE,EAAf;AAAmBC,MAAAA,QAAQ,EAAE,MAA7B;AAAqCV,MAAAA,SAAS,EAAE;AAAhD,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,KAAK,CAACQ,QAAN,CAAeT,GAAf,CAAmB,CAACU,OAAD,EAAUR,KAAV,kBAAqB;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBQ,OAAjB,CAAxC,CADL,CAVJ,eAaI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEZ,MAAAA,SAAS,EAAE;AAAb,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADH,CALL,CADH,GAwBG,EAzBR,CANJ,CADJ;AAoCH","sourcesContent":["import React, { Fragment } from 'react'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Slide from '@material-ui/core/Slide'\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\nexport default function WordDetail(props) {\r\n    const { word } = props\r\n    return (\r\n        <Dialog fullScreen open={props.open} onClose={props.handleClose} TransitionComponent={Transition}>\r\n            <div className='closeBar'>\r\n                <IconButton edge=\"end\" color=\"inherit\" onClick={() => props.handleClose()} aria-label=\"close\">\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </div>\r\n            <div style={{ padding: '10px 20px' }}>\r\n                {word.word ? (\r\n                    <Fragment>\r\n                        <Typography variant=\"h3\" component=\"h2\">\r\n                            {word.word}\r\n                        </Typography>\r\n                        <Divider style={{ marginTop: 10 }} />\r\n                        {word.entries.map((entry, index) => (\r\n                            <div key={index} style={{ marginTop: 10 }}>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"i\">\r\n                                    {entry.partOfSpeech}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    {entry.origin.length !== 0 && (<span>Origin:</span>)} {entry.origin[0]}\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle2\" style={{ marginTop: 10 }} component=\"p\">\r\n                                    {entry.definitions[0]}\r\n                                </Typography>\r\n                                <ul style={{ paddingLeft: 30, fontSize: '14px', marginTop: 10 }}>\r\n                                    {entry.examples.map((example, index) => (<li key={index}>{example}</li>))}\r\n                                </ul>\r\n                                <Divider style={{ marginTop: 10 }} />\r\n                            </div>\r\n                        ))}\r\n                    </Fragment>\r\n                ) : ''}\r\n            </div>\r\n        </Dialog>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}